# Database Configuration
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO:update}
spring.jpa.show-sql=${DB_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/project3}
spring.datasource.username=${DATABASE_USERNAME:user}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.connectiontimeout=5000

# JWT Configuration
app.jwtSecret=${JWT_SECRET:defaultSecretKeyThatShouldBeReplacedInProduction}
app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# AI Configuration
gemini.api.key=${GEMINI_API_KEY:}
gemini.project.id=${GEMINI_PROJECT_ID:}
gemini.location=${GEMINI_LOCATION:us-central1}
gemini.model.name=${GEMINI_MODEL_NAME:gemini-1.5-flash-001}

# Actuator Configuration (Health Checks & Monitoring)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=products,categories,users,orders

# Logging Configuration
logging.level.com.example.project3=${LOG_LEVEL:DEBUG}
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:DEBUG}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}

# Server Configuration
server.port=${SERVER_PORT:8080}
server.compression.enabled=true
server.compression.min-response-size=1024

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8081}

# File Upload Configuration
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
spring.servlet.multipart.enabled=true
app.upload.dir=${UPLOAD_DIR:uploads}
app.upload.max-file-size=5242880